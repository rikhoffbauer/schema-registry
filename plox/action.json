{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "JSON schema for a Plox Action yaml file",
  "$id": "https://raw.githubusercontent.com/rikhoffbauer/schema-registry/master/plox/action.json",
  "type": "object",
  "additionalProperties": false,
  "allOf": [{ "$ref": "#/definitions/Action" }],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "URI (URL or relative path) to the JSON schema used in this file.",
      "format": "uri-reference"
    }
  },
  "definitions": {
    "Action": {
      "type": "object",
      "properties": {
        "$schema": {
          "type": "string",
          "description": "URI (URL or relative path) to the JSON schema used in this file.\n\nE.g.: \"https://raw.githubusercontent.com/rikhoffbauer/schema-registry/master/plox/action.json\"",
          "format": "uri-reference"
        },
        "name": {
          "type": "string",
          "description": "The name of the action.\n\nE.g.: \"template\", \"copy\" or \"npm-install-package\""
        },
        "description": {
          "type": "string",
          "description": "A text that briefly describes what the action does.\n\nE.g.: \"Installs an npm package\""
        },
        "requirements": {
          "type": "string",
          "description": "A javascript expression used to determine if the requirements for this\naction have been met.\n\nE.g.: Some actions might require a git repository or a package.json file.",
          "default": "true"
        },
        "inputs": {
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/Input" },
          "description": "A pojo of inputs; values the action can use to change its behavior.\n\nE.g.: The \"npm-install-package\" action has inputs for \"dependencies\" and \"devDependencies\".",
          "default": {}
        }
      },
      "required": ["name", "description"],
      "additionalProperties": false,
      "description": "A Plox Action, the most low level building block from all Plox building blocks."
    },
    "Input": {
      "type": "object",
      "properties": {
        "description": { "type": "string", "description": "A short term" },
        "type": {
          "$ref": "#/definitions/InputTypeName",
          "description": "The type of this input"
        },
        "default": {
          "$ref": "#/definitions/InputType",
          "description": "Default value"
        },
        "required": {
          "type": "boolean",
          "description": "Indicates this action can not run without this input being provided."
        },
        "long_name": {
          "type": "string",
          "description": "A longer name that can be used in UIs and CLIs"
        }
      },
      "required": ["description", "type"],
      "additionalProperties": false,
      "description": "An object describing an input for the Action,\ninputs can be used to alter the Actions behaviour.\n\nE.g.: The \"npm-install-package\" Action has the \"dependencies\" and \"devDependencies\"."
    },
    "InputTypeName": {
      "type": "string",
      "enum": ["string", "boolean", "number", "object", "array"],
      "description": "String representation of the InputTypes"
    },
    "InputType": {
      "anyOf": [
        { "type": "string" },
        { "type": "number" },
        { "type": "boolean" },
        { "type": "object" },
        { "type": "array", "items": {} }
      ],
      "description": "Primitives Inputs can have as values"
    }
  }
}
